#!/bin/bash

elementsL1=( h b c n o f p s k v y i w u )
elementsL2=( he li be ne na mg al si cl ar ca sc ti cr mn fe co ni cu zn ga ge as se br kr rb sr zr nb mo tc ru rh pd ag cd in sn sb te xe cs ba hf ta re os ir pt au hg tl pb bi po at rn fr ra rf db sg bh hs mt ds rg cn nh fl mc lv ts og la ce pr nd pm sm eu gd tb dy ho er tm yb lu ac th pa np pu am cm bk cf es fm md no lr )

function uppercase {
	for word in $@; do
		firstLetter=$(echo -n "${word:0:1}" | tr "[:lower:]" "[:upper:]")
		echo -n "${firstLetter}${word:1} "
	done
}

function elemify {
	if [ "$1" ]; then
		echo -n "$2 " > /dev/stderr
		for q in `seq 0 $2`; do
			echo -n "- " > /dev/stderr
		done
		echo "$1" > /dev/stderr
		if [[ ${1:0:1} =~ [a-zA-Z] ]]; then
			if [[ " ${elementsL2[@]} " =~ " ${1:0:2} " ]] && el=$(elemify "${1:2}" $(($2+1))); then	
				uppercase "${1:0:2} $el"
			elif [[ " ${elementsL1[@]} " =~ " ${1:0:1} " ]] && el=$(elemify "${1:1}" $(($2+1))); then
				uppercase "${1:0:1} $el" # Recurse
			else
				if [[ $2 -eq 0 ]]; then 
					# Depth is zero, this is the original elemify call.
					for i in `seq 1 ${#1}`; do
						if [[ ${1:$i:1} =~ [aeiouAEIOU] ]] && el=$(elemify "${1:0:$((i))}${1:$((i+1))}" $(($2+1))); then
							uppercase "$el" # | tee /dev/stdout > /dev/stderr
							break
						fi
						false
					done
				else
					false
				fi
			fi
		else
			uppercase "${1:0:1} $(elemify "${1:1}" $(($2+1)) )"
		fi
	fi
}

output=$(
        for item in `echo $@ | tr '[:upper:]' '[:lower:]'`; do
	        elemify "$item" 0 || echo -n -
	        echo -n "   "
        done
)
echo "$output"
echo
